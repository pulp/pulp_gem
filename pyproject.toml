[build-system]
requires = [
    "setuptools >= 40.8.0",
    "wheel >= 0.29.0",
]
build-backend = 'setuptools.build_meta'

[project]
name = "pulp_gem"
version = "0.7.0.dev"
description = "Gemfile plugin for the Pulp Project"
readme = "README.md"
authors = [
  {name="Pulp Team", email="pulp-list@redhat.com"},
]
classifiers=[
  "License :: OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
  "Operating System :: POSIX :: Linux",
  "Development Status :: 5 - Production/Stable",
  "Framework :: Django",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
]
requires-python = ">=3.9"
dependencies = [
  "pulpcore>=3.49.0,<3.70",
  "pulp_glue_gem>=0.3.0,<0.6",
  "rubymarshal>=1.2.7,<1.3",
]

[project.urls]
Homepage = "https://pulpproject.org"
Documentation = "https://pulpproject.org/pulp_gem/"
Repository = "https://github.com/pulp/pulp_gem"
"Bug Tracker" = "https://github.com/pulp/pulp_gem/issues"
Changelog = "https://pulpproject.org/pulp_gem/changes/"

[project.entry-points."pulpcore.plugin"]
pulp_gem = "pulp_gem:default_app_config"

[tool.setuptools.packages.find]
where = ["."]

[tool.bumpversion]
current_version = "0.7.0.dev"
commit = false
tag = false
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)(\\.(?P<release>[a-z]+))?"
serialize = [
	"{major}.{minor}.{patch}.{release}",
	"{major}.{minor}.{patch}",
]

[tool.bumpversion.parts.release]
optional_value = "prod"
values = [
	"dev",
	"prod",
]

[[tool.bumpversion.files]]
filename = "./pulp_gem/app/__init__.py"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "./pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

[tool.towncrier]
package = "pulp_gem"
filename = "CHANGES.md"
directory = "CHANGES/"
title_format = "## {version} ({project_date}) {{: #{version} }}"
template = "CHANGES/.TEMPLATE.md"
issue_format = "[#{issue}](https://github.com/pulp/pulp_gem/issues/{issue})"
start_string = "[//]: # (towncrier release notes start)\n"
underlines = ["", "", ""]


[tool.black]
line-length = 100
target-version = ["py39"]
exclude = '''
/(
    \.eggs
  | \.git
  | \.venv
  | _build
  | build
  | dist
  | migrations
  | docs
)/
'''


[tool.check-manifest]
ignore = [
    "CHANGES/**",
    "dev_requirements.txt",
    "doc_requirements.txt",
    "docs/**",
    "template_config.yml",
    ".pep8speaks.yml",
    ".ci/**",
    ".github/**",
    "lint_requirements.txt",
    ".flake8",
]
